<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.fengwk.guard.core.mapper.UserRoleMapper">

    <update id="createIfNotExists" parameterType="java.lang.String">
        create table if not exists ${namespace}_user_role
        (
            id           bigint unsigned not null auto_increment comment '主键',
            gmt_created  datetime    not null comment '创建时间',
            gmt_modified datetime    not null comment '修改时间',
            user_id      varchar(64) not null comment '用户id',
            role_id      bigint unsigned not null comment '角色id',
            primary key (id),
            index        idx_gmtModified(gmt_modified),
            unique uk_userId_roleId(user_id, role_id),
            index        idx_roleId(role_id)
        ) engine=InnoDB default charset=utf8mb4 collate=utf8mb4_bin comment='${namespace}_用户角色关联表';
    </update>

    <update id="dropIfExists">
        drop table if exists ${namespace}_user_role
    </update>

    <insert id="insertAll" parameterType="fun.fengwk.guard.core.model.UserRoleDO" keyProperty="userRoleDO.id" useGeneratedKeys="true">
        insert into ${namespace}_user_role (gmt_created, gmt_modified, user_id, role_id) values
        <foreach collection="userRoleDOs" item="userRoleDO" separator=",">
            (#{userRoleDO.gmtCreated}, #{userRoleDO.gmtModified}, #{userRoleDO.userId}, #{userRoleDO.roleId})
        </foreach>
    </insert>

    <delete id="deleteByIds" parameterType="java.lang.Long">
        delete from ${namespace}_user_role
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="limitByUserId" resultType="fun.fengwk.guard.core.model.UserRoleDO">
        select id, gmt_created as gmtCreated, gmt_modified as gmtModified, user_id as userId, role_id as roleId
        from ${namespace}_user_role
        where user_id=#{userId}
        limit #{limit}
    </select>

    <select id="limitByRoleId" resultType="fun.fengwk.guard.core.model.UserRoleDO">
        select id, gmt_created as gmtCreated, gmt_modified as gmtModified, user_id as userId, role_id as roleId
        from ${namespace}_user_role
        where role_id=#{roleId}
        limit #{limit}
    </select>

</mapper>